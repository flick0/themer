import json
import os
import signal
import subprocess

HOME = "/home/{}".format(
    subprocess.run(["whoami"], stdout=subprocess.PIPE).stdout.decode("utf-8")
).strip()

paths = {
    "common": f"{HOME}/color.json",
    "kitty": f"{HOME}/.config/awesome/config/kitty/colors.conf",
    "Xresources": f"{HOME}/.Xresources",
    "xrdb_cache": "/tmp/xrdb_cache",
    "code": f"{HOME}/.config/Code/User/settings.json",
    "eww": f"{HOME}/.config/awesome/config/eww/colors.scss",
}


async def apply(colors: dict, DARK: bool = True) -> tuple[str, str]:
    try:
        Common.set(colors)
        yield ("Common", None)
    except Exception as e:
        yield ("Common", e)
    try:
        Kitty.set(colors)
        yield ("Kitty", None)
    except Exception as e:
        yield ("Kitty", e)
    try:
        Xrdb().set(colors)
        yield ("xrdb", None)
    except Exception as e:
        yield ("xrdb", e)
    try:
        Code.set(colors, DARK)
        yield ("code", None)
    except Exception as e:
        yield ("code", e)
    try:
        Eww.set(colors)
        yield ("eww", None)
    except Exception as e:
        yield ("eww", e)


class Common:
    def set(colors: dict) -> None:
        subprocess.run(
            f"touch {paths['common']}".split(), stdout=subprocess.PIPE
        )
        with open(paths["common"], "w") as f:
            json.dump(colors, f, indent=4)

    def get() -> dict:
        subprocess.run(
            f"touch {paths['common']}".split(), stdout=subprocess.PIPE
        )
        with open(paths["common"], "r") as f:
            return json.load(f)


class Kitty:
    def set(colors: dict) -> None:
        conf = f"""
# ///////////////////////////////////////////////////////////////////
# generated by themer | https://github.com/flick0/themer
# ///////////////////////////////////////////////////////////////////

# The basic colors
foreground              {colors["text"]}
background              {colors["base"]}
selection_foreground    {colors["crust"]}
selection_background    {colors["mauve"]}
# Cursor colors
cursor                  {colors["sky"]}
cursor_text_color       {colors["crust"]}
# URL underline color when hovering with mouse
url_color               {colors["teal"]}
# OS Window titlebar colors
wayland_titlebar_color system
macos_titlebar_color system
# Tab bar
active_tab_foreground   {colors["base"]}
active_tab_background   {colors["mauve"]}
inactive_tab_foreground {colors["surface0"]}
inactive_tab_background {colors["base"]}
tab_bar_background      {colors["base"]}
# marks
mark1_foreground {colors["base"]}
mark1_background {colors["sky"]}
mark2_foreground {colors["base"]}
mark2_background {colors["green"]}
mark3_foreground {colors["base"]}
mark3_background {colors["blue"]}
# black
color0 {colors["crust"]}
color8 {colors["mantle"]}
# red
color1 {colors["red"]}
color9 {colors["red"]}
# green
color2  {colors["green"]}
color10 {colors["green"]}
# yellow
color3  {colors["yellow"]}
color11 {colors["yellow"]}
# blue
color4  {colors["blue"]}
color12 {colors["blue"]}
# magenta
color5  {colors["pink"]}
color13 {colors["pink"]}
# cyan
color6  {colors["sky"]}
color14 {colors["sky"]}
# white
color7  {colors["rosewater"]}
color15 {colors["flamingo"]}
        """
        with open(paths["kitty"], "w") as f:
            f.write(conf)
        if "KITTY_PID" in os.environ:
            os.kill(int(os.environ["KITTY_PID"]), signal.SIGUSR1)


class Xrdb:
    def __init__(self):
        self.file = (
            lambda foreground, background, color1, color2, color3, color4, color5, color6, color8: f"""
! X colors.

! ///////////////////////////////////////////////////////////////////
! generated by themer | https://github.com/flick0/themer
! ///////////////////////////////////////////////////////////////////

*foreground:        {foreground}
*background:        {background}
*.foreground:       {foreground}
*.background:       {background}
emacs*foreground:   {foreground}
emacs*background:   {background}
URxvt*foreground:   {foreground}
XTerm*foreground:   {foreground}
UXTerm*foreground:  {foreground}
URxvt*background:   [100]{background}
XTerm*background:   {background}
UXTerm*background:  {background}
URxvt*cursorColor:  {foreground}
XTerm*cursorColor:  {foreground}
UXTerm*cursorColor: {foreground}
URxvt*borderColor:  [100]{background}

! Colors 0-15.
*.color0: {background}
*color0:  {background}
*.color1: {color1}
*color1:  {color1}
*.color2: {color2}
*color2:  {color2}
*.color3: {color3}
*color3:  {color3}
*.color4: {color4}
*color4:  {color4}
*.color5: {color5}
*color5:  {color5}
*.color6: {color6}
*color6:  {color6}
*.color7: {foreground}
*color7:  {foreground}
*.color8: {color8}
*color8:  {color8}
*.color9: {color1}
*color9:  {color1}
*.color10: {color2}
*color10:  {color2}
*.color11: {color3}
*color11:  {color3}
*.color12: {color4}
*color12:  {color4}
*.color13: {color5}
*color13:  {color5}
*.color14: {color6}
*color14:  {color6}
*.color15: {foreground}
*color15:  {foreground}

! Black color that will not be affected by bold highlighting.
*.color66: {background}
*color66:  {background}

! Xclock colors.
XClock*foreground: {foreground}
XClock*background: {background}
XClock*majorColor:  rgba:eb/e1/c1/ff
XClock*minorColor:  rgba:eb/e1/c1/ff
XClock*hourColor:   rgba:eb/e1/c1/ff
XClock*minuteColor: rgba:eb/e1/c1/ff
XClock*secondColor: rgba:eb/e1/c1/ff

! Set depth to make transparency work.
URxvt*depth: 32
"""
        )

    def set(self, colors: dict):
        """Merge the colors into the X db so new terminals use them."""
        file = self.file(
            colors["text"],
            colors["base"],
            colors["red"],
            colors["green"],
            colors["yellow"],
            colors["blue"],
            colors["maroon"],
            colors["pink"],
            colors["mauve"],
        )
        subprocess.run(
            f"touch {paths['xrdb_cache']}".split(), stdout=subprocess.PIPE
        )
        with open(paths["xrdb_cache"], "w") as f:
            f.write(file)
        print(
            subprocess.run(
                ["xrdb", "-merge", paths["xrdb_cache"]],
                stdout=subprocess.PIPE,
                check=False,
            ).stdout.decode("utf-8")
        )


class Eww:
    def set(colors):
        conf = {}
        conf["$background"] = colors["crust"]
        conf["$foreground"] = colors["mauve"]
        conf["$black"] = colors["mantle"]
        conf["$gray"] = colors["base"]
        conf["$red"] = colors["red"]
        conf["$green"] = colors["green"]
        conf["$yellow"] = colors["yellow"]
        conf["$blue"] = colors["blue"]
        conf["$magenta"] = colors["pink"]
        conf["$cyan"] = colors["sky"]
        conf["$white"] = colors["text"]
        body = """
// ///////////////////////////////////////////////////////////////////
// generated by themer | https://github.com/flick0/themer
// ///////////////////////////////////////////////////////////////////

        """
        for color in conf:
            body += f"{color}:{conf[color]};\n"
        with open(paths["eww"], "w") as f:
            f.write(body)


class Code:
    def set(colors: dict, DARK: bool = True) -> None:
        """Set the colors in the code editor."""
        light_theme = "Monokai Light"
        dark_theme = "Monokai Pro (Filter Spectrum)"
        template = {
            "workbench.colorCustomizations": {
                "foreground": colors["text"],
                "focusBorder": colors["mauve"],
                "selection.background": colors["mantle"],
                "scrollbar.shadow": colors["base"],
                "activityBar.foreground": colors["text"],
                "activityBar.background": colors["base"],
                "activityBar.inactiveForeground": colors["subtext0"],
                "activityBarBadge.foreground": colors["base"],
                "activityBarBadge.background": colors["teal"],
                "activityBar.border": "#ff000000",
                "activityBar.activeBackground": "#ff000000",
                "sideBar.background": colors["base"],
                "sideBar.foreground": colors["text"],
                "sideBarSectionHeader.background": colors["base"],
                "sideBarSectionHeader.foreground": colors["pink"],
                "sideBarSectionHeader.border": colors["base"],
                "sideBarTitle.foreground": colors["pink"],
                "sideBar.border": "#ff000000",
                "list.inactiveSelectionBackground": colors["mantle"],
                "list.inactiveSelectionForeground": colors["subtext1"],
                "list.hoverBackground": colors["mantle"],
                "list.hoverForeground": colors["mauve"],
                "list.activeSelectionBackground": colors["blue"],
                "list.activeSelectionForeground": colors["base"],
                "tree.indentGuidesStroke": "#16132000",
                "list.dropBackground": colors["base"],
                "list.highlightForeground": colors["pink"],
                "list.focusBackground": colors["mantle"],
                "list.focusForeground": colors["pink"],
                "listFilterWidget.background": colors["mantle"],
                "listFilterWidget.outline": "#00000000",
                "listFilterWidget.noMatchesOutline": colors["red"],
                "statusBar.foreground": colors["text"],
                "statusBar.background": colors["base"],
                "statusBarItem.hoverBackground": colors["mantle"],
                "statusBar.border": "#ff000000",
                "statusBar.debuggingBackground": colors["green"],
                "statusBar.debuggingForeground": colors["base"],
                "statusBar.noFolderBackground": colors["teal"],
                "statusBar.noFolderForeground": colors["base"],
                "statusBarItem.remoteBackground": colors["mantle"],
                "statusBarItem.remoteForeground": colors["green"],
                "titleBar.activeBackground": colors["base"],
                "titleBar.activeForeground": colors["lavender"],
                "titleBar.inactiveBackground": colors["base"],
                "titleBar.inactiveForeground": colors["subtext0"],
                "titleBar.border": "#00000000",
                "menubar.selectionForeground": colors["lavender"],
                "menubar.selectionBackground": colors["mantle"],
                "menu.foreground": colors["lavender"],
                "menu.background": colors["base"],
                "menu.selectionForeground": colors["yellow"],
                "menu.selectionBackground": colors["mantle"],
                "menu.selectionBorder": "#00000000",
                "menu.separatorBackground": colors["mantle"],
                "menu.border": colors["mauve"],
                "button.background": colors["green"],
                "button.foreground": colors["mantle"],
                "button.hoverBackground": colors["green"],
                "button.secondaryForeground": colors["mantle"],
                "button.secondaryBackground": colors["yellow"],
                "button.secondaryHoverBackground": colors["yellow"],
                "input.background": colors["mantle"],
                "input.border": "#00000000",
                "input.foreground": colors["text"],
                "inputOption.activeBackground": colors["mauve"],
                "inputOption.activeBorder": "#ffffff00",
                "inputOption.activeForeground": colors["crust"],
                "input.placeholderForeground": colors["subtext0"],
                "textLink.foreground": colors["teal"],
                "editor.background": colors["base"],
                "editor.foreground": colors["text"],
                "editorLineNumber.foreground": colors["teal"],
                "editorCursor.foreground": colors["green"],
                "editorCursor.background": colors["base"],
                "editor.selectionBackground": colors["rosewater"] + "50",
                "editor.inactiveSelectionBackground": colors["mantle"] + "20",
                "editorWhitespace.foreground": colors["yellow"] + "40",
                "editor.selectionHighlightBackground": colors["mantle"] + "20",
                "editor.selectionHighlightBorder": colors["lavender"],
                "editor.findMatchBackground": colors["overlay0"],
                "editor.findMatchBorder": colors["green"],
                "editor.findMatchHighlightBackground": colors["surface0"],
                "editor.findMatchHighlightBorder": colors["green"],
                "editor.findRangeHighlightBackground": colors["base"],
                "editor.findRangeHighlightBorder": "#ffffff00",
                "editor.rangeHighlightBackground": "#ffffff0b",
                "editor.rangeHighlightBorder": "#ffffff00",
                "editor.hoverHighlightBackground": colors["blue"] + "40",
                "editor.wordHighlightStrongBackground": colors["blue"],
                "editor.lineHighlightBorder": colors["mantle"],
                "editorLineNumber.activeForeground": colors["peach"],
                "editorLink.activeForeground": colors["blue"],
                "editorIndentGuide.background": "#1a182656",
                "editorIndentGuide.activeBackground": colors["text"],
                "editorRuler.foreground": colors["subtext0"],
                "editorError.foreground": colors["red"],
                "editorError.background": "#00000000",
                "editorError.border": "#ffffff00",
                "editorWarning.foreground": colors["yellow"],
                "editorWarning.background": "#A9904000",
                "editorWarning.border": "#ffffff00",
                "editorInfo.foreground": colors["sky"],
                "editorInfo.background": "#4490BF00",
                "editorInfo.border": "#4490BF00",
                "editorGutter.background": colors["base"],
                "editorGutter.modifiedBackground": colors["sky"],
                "editorGutter.addedBackground": colors["green"],
                "editorGutter.deletedBackground": colors["maroon"],
                "editorGutter.foldingControlForeground": colors["text"],
                "editorCodeLens.foreground": colors["subtext0"],
                "editorGroup.border": colors["mauve"],
                "diffEditor.insertedTextBackground": colors["green"] + "30",
                "diffEditor.removedTextBackground": colors["red"] + "30",
                "diffEditor.border": colors["pink"],
                "panel.background": colors["base"],
                "panel.border": colors["mantle"],
                "panelTitle.activeBorder": colors["text"],
                "panelTitle.activeForeground": colors["text"],
                "panelTitle.inactiveForeground": colors["subtext0"],
                "badge.background": colors["text"],
                "badge.foreground": colors["base"],
                "terminal.foreground": colors["lavender"],
                "terminalCursor.background": colors["mauve"],
                "terminalCursor.foreground": colors["yellow"],
                "terminal.border": colors["text"],
                "terminal.ansiBlack": colors["crust"],
                "terminal.ansiBlue": colors["blue"],
                "terminal.ansiBrightBlack": colors["crust"],
                "terminal.ansiBrightBlue": colors["sky"],
                "terminal.ansiBrightCyan": colors["teal"],
                "terminal.ansiBrightGreen": colors["green"],
                "terminal.ansiBrightMagenta": colors["mauve"],
                "terminal.ansiBrightRed": colors["red"],
                "terminal.ansiBrightWhite": colors["text"],
                "terminal.ansiBrightYellow": colors["yellow"],
                "terminal.ansiCyan": colors["teal"],
                "terminal.ansiGreen": colors["green"],
                "terminal.ansiMagenta": colors["mauve"],
                "terminal.ansiRed": colors["red"],
                "terminal.ansiWhite": colors["text"],
                "terminal.ansiYellow": colors["yellow"],
                "breadcrumb.background": colors["base"],
                "breadcrumb.foreground": colors["mauve"],
                "breadcrumb.focusForeground": colors["subtext1"],
                "editorGroupHeader.border": "#f2cdcd00",
                "editorGroupHeader.tabsBackground": colors["base"],
                "editorGroupHeader.tabsBorder": "#00000000",
                "tab.activeForeground": colors["text"],
                "tab.border": colors["base"],
                "tab.activeBackground": "#ddb6f200",
                "tab.activeBorder": "#ddb6f200",
                "tab.activeBorderTop": "#ddb6f200",
                "tab.inactiveBackground": colors["base"],
                "tab.inactiveForeground": colors["subtext1"],
                "tab.hoverBackground": colors["base"],
                "scrollbarSlider.background": colors["mantle"],
                "scrollbarSlider.hoverBackground": colors["mauve"],
                "scrollbarSlider.activeBackground": colors["pink"],
                "progressBar.background": colors["green"],
                "widget.shadow": colors["mantle"] + "2a",
                "editorWidget.foreground": colors["lavender"],
                "editorWidget.background": colors["base"],
                "editorWidget.resizeBorder": colors["green"],
                "pickerGroup.border": colors["mantle"],
                "pickerGroup.foreground": colors["teal"],
                "debugToolBar.background": colors["mantle"],
                "debugToolBar.border": colors["green"],
                "notifications.foreground": colors["lavender"],
                "notifications.background": colors["mantle"],
                "notificationToast.border": colors["subtext1"],
                "notificationsErrorIcon.foreground": colors["red"],
                "notificationsWarningIcon.foreground": colors["yellow"],
                "notificationsInfoIcon.foreground": colors["sky"],
                "notificationCenter.border": colors["subtext1"],
                "notificationCenterHeader.foreground": colors["subtext1"],
                "notificationCenterHeader.background": colors["mantle"],
                "notifications.border": colors["subtext1"],
                "gitDecoration.addedResourceForeground": colors["green"],
                "gitDecoration.conflictingResourceForeground": colors[
                    "yellow"
                ],
                "gitDecoration.deletedResourceForeground": colors["maroon"],
                "gitDecoration.ignoredResourceForeground": colors["mantle"],
                "gitDecoration.modifiedResourceForeground": colors["blue"],
                "gitDecoration.stageDeletedResourceForeground": colors[
                    "maroon"
                ],
                "gitDecoration.stageModifiedResourceForeground": colors[
                    "blue"
                ],
                "gitDecoration.submoduleResourceForeground": colors["blue"],
                "gitDecoration.untrackedResourceForeground": colors["green"],
                "editorMarkerNavigation.background": "#201b2e",
                "editorMarkerNavigationError.background": colors["red"],
                "editorMarkerNavigationWarning.background": colors["yellow"],
                "editorMarkerNavigationInfo.background": colors["sky"],
                "merge.currentHeaderBackground": colors["green"],
                "merge.currentContentBackground": colors["yellow"],
                "merge.incomingHeaderBackground": colors["blue"],
                "merge.incomingContentBackground": colors["peach"],
                "merge.commonHeaderBackground": colors["mauve"],
                "merge.commonContentBackground": colors["pink"],
                "editorSuggestWidget.background": colors["base"],
                "editorSuggestWidget.border": colors["mauve"],
                "editorSuggestWidget.foreground": colors["flamingo"],
                "editorSuggestWidget.highlightForeground": colors["mauve"],
                "editorSuggestWidget.selectedBackground": colors["surface0"],
                "editorHoverWidget.foreground": colors["flamingo"],
                "editorHoverWidget.background": colors["base"],
                "editorHoverWidget.border": colors["mauve"],
                "peekView.border": colors["yellow"],
                "peekViewEditor.background": colors["crust"],
                "peekViewEditorGutter.background": colors["crust"],
                "peekViewEditor.matchHighlightBackground": colors["peach"]
                + "99",
                "peekViewEditor.matchHighlightBorder": colors["peach"],
                "peekViewResult.background": colors["base"],
                "peekViewResult.fileForeground": colors["yellow"],
                "peekViewResult.lineForeground": colors["text"],
                "peekViewResult.matchHighlightBackground": colors["peach"]
                + "99",
                "peekViewResult.selectionBackground": colors["sky"] + "33",
                "peekViewResult.selectionForeground": colors["yellow"],
                "peekViewTitle.background": colors["base"],
                "peekViewTitleDescription.foreground": colors["subtext0"],
                "peekViewTitleLabel.foreground": colors["yellow"],
                "icon.foreground": colors["text"],
                "checkbox.background": colors["mantle"],
                "checkbox.foreground": colors["text"],
                "checkbox.border": "#00000000",
                "dropdown.background": colors["mantle"],
                "dropdown.foreground": colors["text"],
                "dropdown.border": "#00000000",
                "minimapGutter.addedBackground": colors["green"],
                "minimapGutter.modifiedBackground": colors["sky"],
                "minimapGutter.deletedBackground": colors["maroon"],
                "minimap.findMatchHighlight": colors["surface0"],
                "minimap.selectionHighlight": colors["mantle"] + "20",
                "minimap.errorHighlight": colors["red"],
                "minimap.warningHighlight": colors["yellow"],
                "minimap.background": colors["base"],
                "sideBar.dropBackground": colors["base"],
                "editorGroup.emptyBackground": colors["base"],
                "panelSection.border": colors["text"],
                "statusBarItem.activeBackground": colors["pink"] + "40",
                "settings.headerForeground": colors["text"],
                "settings.focusedRowBackground": colors["mantle"] + "60",
                "walkThrough.embeddedEditorBackground": colors["crust"],
                "breadcrumb.activeSelectionForeground": colors["subtext1"],
                "editorGutter.commentRangeForeground": colors["text"],
                "debugExceptionWidget.background": colors["mantle"],
                "debugExceptionWidget.border": colors["green"],
                "errorLens.errorBackground": colors["red"] + "20",
                "errorLens.warningBackground": colors["yellow"] + "20",
                "errorLens.infoBackground": colors["green"] + "20",
                "errorLens.hintBackground": colors["sky"] + "20",
            },
        }
        with open(paths["code"], "r") as f:
            conf = json.load(f)
        conf["workbench.colorCustomizations"].update(
            template["workbench.colorCustomizations"]
        )
        if DARK:
            conf["workbench.colorTheme"] = dark_theme
        else:
            conf["workbench.colorTheme"] = light_theme
        with open(paths["code"], "w") as f:
            json.dump(conf, f, indent=4)
